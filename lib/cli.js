#!/usr/bin/env node
!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o(require("apicloud-polyfill"),require("apicloud-tools-core"),require("child_process"),require("ws"),require("fs"),require("path"),require("cross-spawn"),require("minimist"));else if("function"==typeof define&&define.amd)define(["apicloud-polyfill","apicloud-tools-core","child_process","ws","fs","path","cross-spawn","minimist"],o);else{var i="object"==typeof exports?o(require("apicloud-polyfill"),require("apicloud-tools-core"),require("child_process"),require("ws"),require("fs"),require("path"),require("cross-spawn"),require("minimist")):o(e["apicloud-polyfill"],e["apicloud-tools-core"],e.child_process,e.ws,e.fs,e.path,e["cross-spawn"],e.minimist);for(var n in i)("object"==typeof exports?exports:e)[n]=i[n]}}(this,function(e,o,i,n,r,t,p,a){return function(e){function o(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,o),r.loaded=!0,r.exports}var i={};return o.m=e,o.c=i,o.p="",o(0)}([function(e,o,i){"use strict";var n=i(1),r=i(7),t=i(9)(process.argv.slice(2));(t.v||t.version)&&(t._=["version"]);try{var p=t._[0];"run"===p?t={argv:process.argv}:(delete t._,t.workspace=r.resolve((t.workspace||"./")+""),t.project=r.resolve((t.project||"./")+""),t.file=r.resolve((t.file||"./index.html")+"")),n[p](t)}catch(e){console.log(e),console.log("您可以输入 apicloud help 获取更多帮助信息...")}},function(e,o,i){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function r(e){if(null==e)throw new TypeError("Cannot destructure undefined")}var t=i(2),p=n(t),a=i(3),s=i(4),l=(s.exec,i(5)),c=i(6),u=i(7),d=i(8),f="localhost",m=-1,v={version:function(e){r(e);var o=u.resolve(__dirname,"../package.json");c.readFile(o,"utf8",function(e,o){var i=JSON.parse(o);console.log("apicloud-cli: "+i.version)})},help:function(e){r(e);var o="\n  ***************** APICloud 通用命令行开发工具 ***********************\n\n  命令格式\n\n  执行全局方法:\n  apicloud 方法名 --参数名1 参数值2 --参数名2 参数值2\n\n  执行项目相关的方法:\n  apiclud run 方法名\n\n  注意:\n  1. 参数中的workspace,project和file,可以是相对路径或绝对路径\n  2. 支持的应用模板有: "+Object.keys(a.appTemplateConfig())+"\n  3. 支持的页面模板有: "+Object.keys(a.fileTemplateConfig())+"\n  4. port 为wifi服务启动时的端口号\n  5. 使用 apicloud run 执行项目相关的方法时,应先cd切换到项目根目录\n  6. 项目相关的方法,仅在项目有效 polyfill 化以后,才有效\n\n  // ============================================================\n  全局命令示例\n\n  显示版本号:\n  apicloud version 或 apicloud -v 或 apicloud --version\n\n  显示帮助信息:\n  apicloud help\n\n  启动 wifi 服务:\n  apicloud wifiStart --port 8686\n\n  停止 wifi 服务:\n  apicloud wifiStop --port 8686\n\n  wifi 增量更新:\n  apicloud wifiSync --project ./ --updateAll false --port 8686\n\n  wifi 全量更新:\n  apicloud wifiSync --project ./ --updateAll true --port 8686\n\n  wifi 预览:\n  apicloud wifiPreview --file ./index.html --port 8686\n\n  获取 wifi 信息:\n  apicloud wifiInfo --port 8686\n\n  获取 wifi 调试日志:\n  apicloud wifiLog --port 8686\n\n  创建应用模板:\n  apicloud init --name HelloAPICloud --template home --workspace ./\n\n  创建页面模板:\n  apicloud initPage --name first_page --template page001 --project ./\n\n  开启 es6 支持:\n  apicloud polyfill --project ./\n\n  // ============================================================\n\n  项目相关方法示例\n\n  wifi 增量真机同步:\n  apicloud run sync\n\n  预编译 es6/es7 js文件:\n  apicloud run bundle\n\n  预编译 es6/es7 js文件,然后进行wifi 增量真机同步:\n  apicloud run bundle_s\n\n  以debug模式,预编译 es6/es7 js文件,此时会产生对应的 *.map.js 文件,便于在浏览器中调试:\n  apicloud run bundle_d\n\n  以debug模式,预编译 es6/es7 js文件,然后进行wifi 增量真机同步:\n  apicloud run bundle_d_s\n    ";console.log(o)},wifiStart:function(e){var o=e.port,i=void 0===o?8686:o;a.startWifi({port:i})},wifiStop:function(e){var o=e.port,i=void 0===o?8686:o,n=new l("ws://"+f+":"+i);n.on("open",function(){var e={command:m,payload:{method:"wifiStop",params:{}}};n.send(JSON.stringify(e))})},wifiSync:function(e){var o=e.project,i=void 0===o?"./":o,n=e.updateAll,r=void 0===n||n,t=e.port,p=void 0===t?8686:t,a=new l("ws://"+f+":"+p);a.on("open",function(){var e={command:m,payload:{method:"wifiSync",params:{project:i,updateAll:r}}};a.send(JSON.stringify(e))})},wifiPreview:function(e){var o=e.file,i=void 0===o?"./index.html":o,n=e.port,r=void 0===n?8686:n,t=new l("ws://"+f+":"+r);t.on("open",function(){var e={command:m,payload:{method:"wifiPreview",params:{file:i}}};t.send(JSON.stringify(e))})},wifiInfo:function(e){var o=e.port,i=void 0===o?8686:o,n=new l("ws://"+f+":"+i);n.on("open",function(){var e={command:m,payload:{method:"wifiInfo",params:{}}};n.send(JSON.stringify(e))}),n.on("message",function(e){var o=JSON.parse(e),i=o.payload,n=o.command;m===n&&console.log(JSON.stringify(i))})},wifiLog:function(e){var o=e.port,i=void 0===o?8686:o,n=new l("ws://"+f+":"+i);n.on("open",function(){var e={command:m,payload:{method:"wifiLog",params:{}}};n.send(JSON.stringify(e))}),n.on("message",function(e){var o=JSON.parse(e),i=o.payload,n=o.command;m===n&&console.log(JSON.stringify(i))})},init:function(e){var o=e.name,i=void 0===o?"HelloAPICloud":o,n=e.template,r=void 0===n?"home":n,t=e.workspace,p=void 0===t?"./":t;a.init({name:i,template:r,output:p})},initPage:function(e){var o=e.name,i=void 0===o?"first_page":o,n=e.template,r=void 0===n?"page001":n,t=e.project,p=void 0===t?"./":t;a.addFileTemplate({name:i,template:r,output:p})},polyfill:function(e){var o=e.project,i=void 0===o?"./":o;(0,p.default)({project:i})},run:function(e){var o=e.argv;o.shift(),o.shift(),d("npm",o,{stdio:"inherit"})}};e.exports=v},function(e,o){e.exports=require("apicloud-polyfill")},function(e,o){e.exports=require("apicloud-tools-core")},function(e,o){e.exports=require("child_process")},function(e,o){e.exports=require("ws")},function(e,o){e.exports=require("fs")},function(e,o){e.exports=require("path")},function(e,o){e.exports=require("cross-spawn")},function(e,o){e.exports=require("minimist")}])});